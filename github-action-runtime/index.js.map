{"version":3,"sources":["../webpack:/github-action-await-vercel/lib/config.js","../webpack:/github-action-await-vercel/lib/main.js","../webpack:/github-action-await-vercel/node_modules/@actions/core/lib/command.js","../webpack:/github-action-await-vercel/node_modules/@actions/core/lib/core.js","../webpack:/github-action-await-vercel/node_modules/@actions/core/lib/file-command.js","../webpack:/github-action-await-vercel/node_modules/@actions/core/lib/utils.js","../webpack:/github-action-await-vercel/external \"fs\"","../webpack:/github-action-await-vercel/external \"os\"","../webpack:/github-action-await-vercel/external \"path\"","../webpack:/github-action-await-vercel/webpack/bootstrap","../webpack:/github-action-await-vercel/webpack/runtime/compat","../webpack:/github-action-await-vercel/webpack/startup"],"names":["Object","defineProperty","exports","value","BUILD_MAIN_FILENAME","BUILD_DIR","DEFAULT_TIMEOUT","VERCEL_BASE_API_ENDPOINT","__createBinding","this","create","o","m","k","k2","undefined","enumerable","get","__setModuleDefault","v","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","default","core","__webpack_require__","awaitVercelDeployment_1","config_1","runConfigChecks","process","env","VERCEL_TOKEN","message","NODE_ENV","setFailed","Error","run","isDebug","info","timeout","getInput","debug","then","deployment","setOutput","url","catch","error","os","utils_1","issueCommand","command","properties","cmd","Command","stdout","write","toString","EOL","issue","name","CMD_STRING","constructor","cmdStr","keys","length","first","key","val","escapeProperty","escapeData","s","toCommandValue","replace","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","apply","command_1","file_command_1","path","ExitCode","exportVariable","convertedVal","filePath","delimiter","commandValue","setSecret","secret","addPath","inputPath","options","toUpperCase","required","trim","setCommandEcho","enabled","exitCode","Failure","warning","startGroup","endGroup","group","fn","saveState","getState","fs","existsSync","appendFileSync","encoding","input","String","JSON","stringify","module","require","__webpack_module_cache__","moduleId","cachedModule","threw","__webpack_modules__","ab","__dirname","__webpack_exports__"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BUILD_MAIN_FILENAME = exports.BUILD_DIR = exports.DEFAULT_TIMEOUT = exports.VERCEL_BASE_API_ENDPOINT = void 0;\nexports.VERCEL_BASE_API_ENDPOINT = 'https://api.vercel.com';\n/**\n * Timeout (in seconds) used by default if no custom timeout is provided as input.\n */\nexports.DEFAULT_TIMEOUT = 10;\n/**\n * Directory where the compiled version (JS) of the TS code is stored.\n *\n * XXX Should match the package.json:main value.\n */\nexports.BUILD_DIR = 'lib';\n/**\n * Name of the Action's entrypoint.\n *\n * XXX Should match the package.json:main value.\n */\nexports.BUILD_MAIN_FILENAME = 'main.js';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = __importStar(require(\"@actions/core\"));\nconst awaitVercelDeployment_1 = __importDefault(require(\"./awaitVercelDeployment\"));\nconst config_1 = require(\"./config\");\n/**\n * Runs configuration checks to make sure everything is properly configured.\n * If anything isn't properly configured, will stop the workflow.\n */\nconst runConfigChecks = () => {\n    if (!process.env.VERCEL_TOKEN) {\n        const message = process.env.NODE_ENV === 'test'\n            ? `VERCEL_TOKEN environment variable is not defined. Please define it in the \".env.test\" file. See https://vercel.com/account/tokens`\n            : `VERCEL_TOKEN environment variable is not defined. Please create a GitHub \"VERCEL_TOKEN\" secret. See https://vercel.com/account/tokens`;\n        core.setFailed(message);\n        throw new Error(message);\n    }\n};\n/**\n * Runs the GitHub Action.\n */\nconst run = () => {\n    if (!core.isDebug()) {\n        core.info('Debug mode is disabled. Read more at https://github.com/UnlyEd/github-action-await-vercel#how-to-enable-debug-logs');\n    }\n    try {\n        const timeout = (+core.getInput('timeout') || config_1.DEFAULT_TIMEOUT) * 1000;\n        core.debug(`Timeout used: ${timeout}`);\n        awaitVercelDeployment_1.default(timeout)\n            .then((deployment) => {\n            core.setOutput('url', deployment.url);\n        })\n            .catch((error) => {\n            core.setFailed(error);\n        });\n    }\n    catch (error) {\n        core.setFailed(error.message);\n    }\n};\nrunConfigChecks();\nrun();\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.  The value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n */\nfunction error(message) {\n    command_1.issue('error', message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n */\nfunction warning(message) {\n    command_1.issue('warning', message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n//# sourceMappingURL=utils.js.map","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(3109);\n"]}